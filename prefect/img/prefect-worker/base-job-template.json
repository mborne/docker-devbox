{
  "job_configuration": {
    "command": "{{ command }}",
    "env": "{{ env }}",
    "labels": "{{ labels }}",
    "name": "{{ name }}",
    "image": "{{ image }}",
    "registry_credentials": "{{ registry_credentials }}",
    "image_pull_policy": "{{ image_pull_policy }}",
    "networks": "{{ networks }}",
    "network_mode": "{{ network_mode }}",
    "auto_remove": "{{ auto_remove }}",
    "volumes": "{{ volumes }}",
    "stream_output": "{{ stream_output }}",
    "mem_limit": "{{ mem_limit }}",
    "memswap_limit": "{{ memswap_limit }}",
    "privileged": "{{ privileged }}"
  },
  "variables": {
    "description": "Configuration class used by the Docker worker.\n\nAn instance of this class is passed to the Docker worker's `run` method\nfor each flow run. It contains all the information necessary to execute the\nflow run as a Docker container.\n\nAttributes:\n    name: The name to give to created Docker containers.\n    command: The command executed in created Docker containers to kick off\n        flow run execution.\n    env: The environment variables to set in created Docker containers.\n    labels: The labels to set on created Docker containers.\n    image: The image reference of a container image to use for created jobs.\n        If not set, the latest Prefect image will be used.\n    image_pull_policy: The image pull policy to use when pulling images.\n    networks: Docker networks that created containers should be connected to.\n    network_mode: The network mode for the created containers (e.g. host, bridge).\n        If 'networks' is set, this cannot be set.\n    auto_remove: If set, containers will be deleted on completion.\n    volumes: Docker volumes that should be mounted in created containers.\n    stream_output: If set, the output from created containers will be streamed\n        to local standard output.\n    mem_limit: Memory limit of created containers. Accepts a value\n        with a unit identifier (e.g. 100000b, 1000k, 128m, 1g.) If a value is\n        given without a unit, bytes are assumed.\n    memswap_limit: Total memory (memory + swap), -1 to disable swap. Should only be\n        set if `mem_limit` is also set. If `mem_limit` is set, this defaults to\n        allowing the container to use as much swap as memory. For example, if\n        `mem_limit` is 300m and `memswap_limit` is not set, containers can use\n        600m in total of memory and swap.\n    privileged: Give extended privileges to created containers.",
    "type": "object",
    "properties": {
      "command": {
        "title": "Command",
        "description": "The command to use when starting a flow run. In most cases, this should be left blank and the command will be automatically generated by the worker.",
        "type": "string"
      },
      "env": {
        "title": "Environment Variables",
        "description": "Environment variables to set when starting a flow run.",
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "labels": {
        "title": "Labels",
        "description": "Labels applied to infrastructure created by the worker using this job configuration.",
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "name": {
        "title": "Name",
        "description": "Name given to infrastructure created by the worker using this job configuration.",
        "type": "string"
      },
      "image": {
        "title": "Image",
        "description": "The image reference of a container image to use for created jobs. If not set, the latest Prefect image will be used.",
        "example": "docker.io/prefecthq/prefect:2-latest",
        "type": "string"
      },
      "registry_credentials": {
        "title": "Registry Credentials",
        "description": "Credentials for logging into a Docker registry to pull images from.",
        "allOf": [
          {
            "$ref": "#/definitions/DockerRegistryCredentials"
          }
        ]
      },
      "image_pull_policy": {
        "title": "Image Pull Policy",
        "description": "The image pull policy to use when pulling images.",
        "enum": [
          "IfNotPresent",
          "Always",
          "Never"
        ],
        "type": "string"
      },
      "networks": {
        "title": "Networks",
        "description": "Docker networks that created containers should be connected to.",
        "type": "array",
        "items": {
          "type": "string"
        },
        "default": ["devbox"]
      },
      "network_mode": {
        "title": "Network Mode",
        "description": "The network mode for the created containers (e.g. host, bridge). If 'networks' is set, this cannot be set.",
        "type": "string"
      },
      "auto_remove": {
        "title": "Auto Remove",
        "description": "If set, containers will be deleted on completion.",
        "default": false,
        "type": "boolean"
      },
      "volumes": {
        "title": "Volumes",
        "description": "A list of volume to mount into created containers.",
        "example": [
          "/my/local/path:/path/in/container"
        ],
        "type": "array",
        "items": {
          "type": "string"
        },
        "default": [
          "/worker-data:/worker-data"
        ]
      },
      "stream_output": {
        "title": "Stream Output",
        "description": "If set, the output from created containers will be streamed to local standard output.",
        "default": true,
        "type": "boolean"
      },
      "mem_limit": {
        "title": "Memory Limit",
        "description": "Memory limit of created containers. Accepts a value with a unit identifier (e.g. 100000b, 1000k, 128m, 1g.) If a value is given without a unit, bytes are assumed.",
        "type": "string"
      },
      "memswap_limit": {
        "title": "Memory Swap Limit",
        "description": "Total memory (memory + swap), -1 to disable swap. Should only be set if `mem_limit` is also set. If `mem_limit` is set, this defaults toallowing the container to use as much swap as memory. For example, if `mem_limit` is 300m and `memswap_limit` is not set, containers can use 600m in total of memory and swap.",
        "type": "string"
      },
      "privileged": {
        "title": "Privileged",
        "description": "Give extended privileges to created container.",
        "default": false,
        "type": "boolean"
      }
    },
    "definitions": {
      "DockerRegistryCredentials": {
        "title": "DockerRegistryCredentials",
        "description": "Store credentials for interacting with a Docker Registry.",
        "type": "object",
        "properties": {
          "username": {
            "title": "Username",
            "description": "The username to log into the registry with.",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "description": "The password to log into the registry with.",
            "type": "string",
            "writeOnly": true,
            "format": "password"
          },
          "registry_url": {
            "title": "Registry Url",
            "description": "The URL to the registry. Generally, \"http\" or \"https\" can be omitted.",
            "example": "index.docker.io",
            "type": "string"
          },
          "reauth": {
            "title": "Reauth",
            "description": "Whether or not to reauthenticate on each interaction.",
            "default": true,
            "type": "boolean"
          }
        },
        "required": [
          "username",
          "password",
          "registry_url"
        ],
        "block_type_slug": "docker-registry-credentials",
        "secret_fields": [
          "password"
        ],
        "block_schema_references": {}
      }
    }
  }
}